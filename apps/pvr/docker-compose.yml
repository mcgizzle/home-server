services:
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v3.3.13
    restart: unless-stopped
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
    ports:
      - "8191:8191" # Optional: only needed if you want to access FlareSolverr outside of the Docker network
    networks:
      - internal-net

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "$DOCKER_VOLUME_PATH/radarr:/config"
      - "$MEDIA_MOUNT_PATH/movies:/movies" 
      - "$DOWNLOADS_MOUNT_PATH:/downloads" 
    ports:
      - 7878:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr.rule=Host(`radarr.pi.local`)"
      - "traefik.http.routers.radarr.entrypoints=web"
      - "traefik.http.services.radarr.loadbalancer.server.port=7878"
    networks:
      - internal-net

  radarr4k:
    image: lscr.io/linuxserver/radarr:latest
    restart: unless-stopped
    container_name: radarr4k
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "$DOCKER_VOLUME_PATH/radarr4k:/config"
      - "$MEDIA_MOUNT_PATH/movies4k:/movies-4k" 
      - "$DOWNLOADS_MOUNT_PATH:/downloads" 
    ports:
      - 7879:7878
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.radarr4k.rule=Host(`radarr4k.pi.local`)"
      - "traefik.http.routers.radarr4k.entrypoints=web"
      - "traefik.http.services.radarr4k.loadbalancer.server.port=7878"
    networks:
      - internal-net

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    restart: unless-stopped
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "$DOCKER_VOLUME_PATH/sonarr:/config"
      - "$MEDIA_MOUNT_PATH/tv-shows:/tv" 
      - "$DOWNLOADS_MOUNT_PATH:/downloads" 
    ports:
      - 8989:8989
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.pi.local`)"
      - "traefik.http.routers.sonarr.entrypoints=web"
      - "traefik.http.services.sonarr.loadbalancer.server.port=8989"
    networks:
      - internal-net

  prowlarr:
    container_name: prowlarr
    restart: unless-stopped
    image: lscr.io/linuxserver/prowlarr:latest
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/London
    volumes:
      - "$DOCKER_VOLUME_PATH/prowlarr:/config"
    ports:
      - 9696:9696
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.pi.local`)"
      - "traefik.http.routers.prowlarr.entrypoints=web"
      - "traefik.http.services.prowlarr.loadbalancer.server.port=9696"
    networks:
      - internal-net

  overseerr:
    image: lscr.io/linuxserver/overseerr:latest
    restart: unless-stopped
    container_name: overseerr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
    volumes:
      - "$DOCKER_VOLUME_PATH/overseerr:/config"
    ports:
      - 5055:5055
    dns:
      - 1.1.1.1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`requests.pi.local`)"
      - "traefik.http.routers.overseerr.entrypoints=web"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"
    networks:
      - internal-net

networks:
  internal-net:
    external: true

